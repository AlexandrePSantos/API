// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model usertype {
  idtype      Int          @id @default(autoincrement())
  type        String       @db.VarChar(50)
}

model user {
  iduser      Int          @id @default(autoincrement())
  email       String       @unique @db.VarChar(100)
  photo       String?      @db.Text
  password    String       @db.VarChar(255)
  idtype      Int
  username    String?      @unique @db.VarChar(50)
  name        String?      @db.VarChar(100)
  last_login  DateTime?
}

model state {
  idstate  Int      @id @default(autoincrement())
  state    String   @db.VarChar(50)
}

model project {
  idproject          Int      @id @default(autoincrement())
  nameproject        String   @db.VarChar(100)
  startdatep         DateTime?
  enddatep           DateTime?
  idstate            Int
  iduser             Int
  completionstatus   Boolean  @default(false)
  performancereview  String?  @db.Text
  obs                String?  @db.Text
}

model task {
  idtask          Int      @id @default(autoincrement())
  nametask        String   @db.VarChar(100)
  startdatet      DateTime?
  enddatet        DateTime?
  idproject       Int
  idstate         Int
  photo           String?  @db.Text
  timespend       Int?
  local           String?  @db.VarChar(100)
  taxes           Decimal? @db.Decimal(10, 2)
  completionrate  Decimal? @db.Decimal(5, 2)
  photos          String?  @db.Text
  observations    String?  @db.Text
}

model synclog {
  idlog     Int      @id @default(autoincrement())
  iduser    Int
  timestamp DateTime
  action    String   @db.VarChar(100)
  status    String   @db.VarChar(50)
}